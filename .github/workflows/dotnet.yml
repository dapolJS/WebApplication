name: .NET CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # Job 1: Setup and Build (Including SQL Server Service)
  setup-and-build:
    runs-on: self-hosted  # Use self-hosted runner

    steps:
      - uses: actions/checkout@v4
    
      # Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
        
      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore
      
      # Build project
      - name: Build
        run: dotnet build --no-restore

      # Wait for SQL Server to be ready
      - name: Wait for SQL Server to be ready
        run: |
          while ! nc -z localhost 1433; do
            echo "Waiting for SQL Server..."
            sleep 5
          done
          echo "SQL Server is up and running."

  # Job 2: Install SQL Server tools and Database Setup
  database-setup:
    runs-on: self-hosted  # Use self-hosted runner
    needs: setup-and-build   # This job runs after the setup-and-build job
    steps:
      # Install SQL Server tools
      - name: Install SQL Server tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          echo "export PATH=\$PATH:/opt/mssql-tools/bin" >> ~/.bashrc
          source ~/.bashrc

      # Create Database if not exists
      - name: Create Database if not exists
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourStrong!Passw0rd" -Q "IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'FirstWebApiNotes') CREATE DATABASE FirstWebApiNotes;"

      # Run the seed script (use SQL queries to seed the database)
      - name: Seed Database
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourStrong!Passw0rd" -i ./SqlSeed/SQLQuery_3.sql

  # Job 3: Apply Migrations (Reinstall SQL Server tools)
  migrations:
    runs-on: self-hosted  # Use self-hosted runner
    needs: database-setup   # This job runs after the database-setup job
    steps:
      # Apply Entity Framework Migrations
      - name: Apply Entity Framework Migrations
        run: |
          dotnet tool install --global dotnet-ef
          dotnet ef database update --project ./FirstWebApi/FirstWebApi.csproj --configuration Release --context DataContextEF
        env:
          ASPNETCORE_ENVIRONMENT: "Testing"

  # Job 4: Run Tests (Reinstall SQL Server tools)
  test:
    runs-on: self-hosted  # Use self-hosted runner
    needs: migrations   # This job runs after migrations
    steps:
      # Run Tests
      - name: Run Tests
        run: dotnet test --no-build --verbosity normal
        env:
          ASPNETCORE_ENVIRONMENT: "Testing"
