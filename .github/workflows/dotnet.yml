name: .NET CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # Build Job: Check out the code, restore dependencies, and build the project
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
    
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
        
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --no-restore

  # Database Setup Job: Set up SQL Server and check if it's ready
  sql-server-setup:
    runs-on: ubuntu-latest
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        options: --health-cmd="exit 0" --health-interval=10s --health-timeout=5s --health-retries=3
        ports:
          - 1433:1433
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: "YourStrong!Passw0rd"  # Replace with a strong password
    
    steps:
      - name: Wait for SQL Server to be ready
        run: |
          while ! nc -z localhost 1433; do
            echo "Waiting for SQL Server..."
            sleep 5
          done
          echo "SQL Server is up and running."

  # Create Database Job: Ensure the database exists
  create-database:
    runs-on: ubuntu-latest
    needs: sql-server-setup  # Ensure this job only runs after SQL Server is ready
    steps:
      - name: Create Database if not exists
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourStrong!Passw0rd" -Q "IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'FirstWebApiNotes') CREATE DATABASE FirstWebApiNotes;"

  # Migrations Job: Apply Entity Framework migrations
  migrations:
    runs-on: ubuntu-latest
    needs: create-database  # Ensure this job only runs after the database creation
    steps:
      - name: Install dotnet-ef tool
        run: |
          dotnet tool install --global dotnet-ef

      - name: Apply Entity Framework Migrations
        run: |
          dotnet ef database update --project ./FirstWebApi/FirstWebApi.csproj --configuration Release --context DataContextEF
        env:
          ASPNETCORE_ENVIRONMENT: "Testing"

  # Seed Database Job: Seed the database with data
  seed-database:
    runs-on: ubuntu-latest
    needs: migrations  # Ensure this job only runs after migrations are applied
    steps:
      - name: Seed Database
        run: |
          /opt/mssql-tools/bin/sql
